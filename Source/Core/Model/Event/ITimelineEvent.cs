namespace UniBeat.RhythmEngine
{
    public interface ITimelineEvent
    {
        double Index { get; } // The position of this event on the timeline in sixteenths

        // The 'start' value of this range will always be the Index value.
        // End value of range will be same as Index if this event doesn't take up any space on the timeline
        // e.g a music start event or a circle hit object.
        TimelineRange Range { get; }
        int IndexAsInt { get; } // The position of this event on the timeline in sixteenths, rounded to an integer
        ITimelineEventParent Parent { get; } // Is this event the child of another? e.g we were generated by an ITimelineEventGenerator

        // How far from the timeline's vertical centre do we
        // offset this particular event (if we render it to screen).
        float VerticalOffset { get; }

        // Set to true if you want this event to be excluded from appearing in the timeline
        bool ExcludeFromTimeline { get; }

        // Called whenever this event is emitted by the Timeline. May be called multiple times.
        // index is the exact sixteenth index it was emitted on. This will be within 0.5d of this event's Index.
        void OnEmit(double index);
        void Reset();
    }
}
